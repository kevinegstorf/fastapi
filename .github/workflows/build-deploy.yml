name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_USERNAME}}
      DATABASE_NAME: ${{secrets.DATABASE_USERNAME}}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      SQLALCHEMY_DATABASE_URL: ${{secrets.SQLALCHEMY_DATABASE_URL}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Postgres database
        uses: Daniel-Marynicz/postgresql-action@master
        with:
          postgres_image_tag: 12-alpine
          postgres_extensions: uuid-ossp ltree
          exposed_postgres_port: 5432
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: install pip install fastapi
        run: pip install fastapi[all]
      - name: test with pytest
        run: |
          pip install pytest
          pytest
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: deploy to digital ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          password: ${{secrets.PROD_PASSWORD}}
          script: |
            cd app/src
            git pull
            echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api
